setwd("~/GitHub/605/assign")
3*.5
.5*-4
x <- c(.5,.5)
y<- c(3,-4)
x%*%y
u <- c(.5, .5)
v <- c(3, -4)
uv <- u %*% v
3*u
u <- c(.5, .5)
v <- c(3, -4)
3*u
(3*u) - (2*v)
cos(45)
solve
5*.7071068
.5/3.535534
uv / (uu * vv)
uu <- sqrt(u %*% u)
vv <- sqrt(v %*% v)
uv <- u %*% v
uv / (uu * vv)
install.packages("NISTunits", dependencies = TRUE)
library(NISTunits)
d <- diag(3)
typeof(d)
d
mtx <- matrix(1,1,3,2,-1,5,-1,-2,4)
mtx <- matrix(c(1,1,3,2,-1,5,-1,-2,4))
mtx
mtx <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3)
mtx
mtx <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
mtx
vct <- c(1,2,6)
vct
mtx[lower.tri(mtx)] <- 0
mtx
mat <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
mat[lower.tri(mat)] <- 0
mat
mat[!upper.tri(mat)] <- 0
mat
mat <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
mat[!upper.tri(mat)] <- 0
mat
mat <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
mat[lower.tri(mat)] <- 0
mat
6/2
6/4
mat <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
mat
matrix <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vct <- c(1,2,6)
matrix <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vct <- c(1,2,6)
matrix + vct
cbind(matrix, vct)
matrix <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vct <- c(1,2,6)
mat <- cbind(matrix, vector)
mat
matrix <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
mat <- cbind(matrix, vector)
mat
i <- 1
mat[1,]
mat[1,1]
mat[1,2]
mat[1,3]
if (mat[1,i] == 0)
i = i + 1
i
matrix <- matrix(c(0,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
mat <- cbind(matrix, vector)
if (mat[1,i] == 0)
i = i + 1
i
matrix <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
mat[1,2]
mat[1,3]
matrix <- matrix(c(0,0,0,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
mat <- cbind(matrix, vector)
i <- 1
if (mat[1,i] == 0)
i = i + 1
if (mat[1,i] == 0)
i = i + 1
if (mat[1,i] == 0)
return "All 0's on top row, no elimination to do here"
i <- 1
if (mat[1,i] == 0)
i = i + 1
if (mat[1,i] == 0)
i = i + 1
if (mat[1,i] == 0)
return ("All 0's on top row, no elimination to do here")
matrix <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
i <- 1
GJelimination(matrix, vector)
GJelimination <- function(matrix, vector) {
i <- 1
mat <- cbind(matrix, vector)
if (mat[1,i] == 0)
i = i + 1
if (mat[1,i] == 0)
i = i + 1
if (mat[1,i] == 0)
return ("All 0's on top row, no elimination to do here")
}
GJelimination(matrix, vector)
matrix <- matrix(c(0,0,0,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
GJelimination(matrix, vector)
matrix <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
matrix[lower.tri(matrix)] <- 0 # into upper triangle form
matrix
6/4
5*1.5
2-7.5
-5.5 + 7.5
5.5+1.5
matrix <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
matrix
6/7.33
-1/3
(-1/3) * -1
7/7.33
matrix <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
matrix[upper.tri(matrix)] <- 0 # into upper triangle form
matrix
matrix[lower.tri(matrix)] <- 0 # into upper triangle form
matrix <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
matrix[lower.tri(matrix)] <- 0 # into upper triangle form
matrix
.95/-3
1-.95+.32
3*.95
1-2.85+.32
i <- 1
j <- 1
matrix <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
mat <- cbind(matrix, vector)
LTMelimination <- function(matrix, vector) {
i <- 1
j <- 1
mat <- cbind(matrix, vector)
if (mat[i,j] == 0) # check for zero pjvots... badly
j = j + 1
if (mat[i,j] == 0)
j = j + 1
if (mat[i,j] == 0)
return ("All 0's on top row, no elimination to do here")
}
LTMelimination(matrix, vector)
matrix <- matrix(c(0,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
LTMelimination(matrix, vector)
matrix <- matrix(c(0,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
LTMelimination(matrix, vector)
i <- 1
j <- 1
mat <- cbind(matrix, vector)
if (mat[i,j] == 0) # check for zero pivots... badly
j = j + 1
if (mat[i,j] == 0)
j = j + 1
if (mat[i,j] == 0)
return ("All 0's on top row, no elimination to do here")
if (mat[i,j] == 0) # check for zero pivots... badly
j = j + 1
if (mat[i,j] == 0)
j = j + 1
if (mat[i,j] == 0)
return ("All 0's on top row, no elimination to do here")
mat[1,1]
LTMelimination <- function(matrix, vector) {
i <- 1
j <- 1
mat <- cbind(matrix, vector)
if (mat[i,j] == 0) # check for zero pivots... badly
j = j + 1
if (mat[i,j] == 0)
j = j + 1
if (mat[i,j] == 0)
return ("All 0's on top row, no elimination to do here")
}
matrix <- matrix(c(0,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
LTMelimination(matrix, vector)
j <- 1
matrix <- matrix(c(0,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
LTMelimination(matrix, vector)
LTMelimination <- function(matrix, vector) {
i <- 1
j <- 1
mat <- cbind(matrix, vector)
if (mat[i,j] == 0) # check for zero pivots... badly
j = j + 1
if (mat[i,j] == 0)
j = j + 1
if (mat[i,j] == 0)
return ("All 0's on top row, no elimination to do here")
return (c(i, j))
}
matrix <- matrix(c(0,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
LTMelimination(matrix, vector)
matrix <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
matrix[1,] <- matrix[1,] / matrix[1, 1]
matrix
matrix <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
matrix\
matrix
matrix <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
matrix[1,] <- matrix[1,] / matrix[1, 1]
for (i in 2:3) {
for (j in i:3) {
matrix[j, ] <- matrix[j, ] - matrix[i - 1, ] * matrix[j, i - 1]
}
matrix[i, ] <- matrix[i, ] / matrix[i, i]
}
matrix
matrix <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
matrix[1,] <- matrix[1,] / matrix[1, 1]
matrix <- cbind(matrix, vector)
for (i in 2:3) {
for (j in i:3) {
matrix[j, ] <- matrix[j, ] - matrix[i - 1, ] * matrix[j, i - 1]
}
matrix[i, ] <- matrix[i, ] / matrix[i, i]
}
matrix <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
matrix[1,] <- matrix[1,] / matrix[1, 1]
matrix <- cbind(matrix, vector)
for (i in 2:3) {
for (j in i:3) {
matrix[j, ] <- matrix[j, ] - matrix[i - 1, ] * matrix[j, i - 1]
}
matrix[i, ] <- matrix[i, ] / matrix[i, i]
}
matrix <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
matrix[1,] <- matrix[1,] / matrix[1, 1]
matrix <- cbind(matrix, vector)
for (i in 2:3) {
for (j in i:3) {
matrix[j, ] <- matrix[j, ] - matrix[i - 1, ] * matrix[j, i - 1]
}
matrix[i, ] <- matrix[i, ] / matrix[i, i]
}
matrix
matrix <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
matrix[1,] <- matrix[1,] / matrix[1, 1]
matrix <- cbind(matrix, vector)
for (i in 2:3) {
for (j in i:3) {
matrix[j, ] <- matrix[j, ] - matrix[i - 1, ] * matrix[j, i - 1]
}
matrix[i, ] <- matrix[i, ] / matrix[i, i]
}
for (i in 3:2) {
for (j in i:2-1) {
matrix[j, ] <- matrix[j, ] - matrix[i, ] * matrix[j, i]
}
}
matrix
matrix <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
Gelimination(matrix, vector)
matrix[,4]
matrix <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
matrix[1,] <- matrix[1,] / matrix[1, 1]
matrix <- cbind(matrix, vector)
for (i in 2:3) {
for (j in i:3) {
matrix[j, ] <- matrix[j, ] - matrix[i - 1, ] * matrix[j, i - 1]
}
matrix[i, ] <- matrix[i, ] / matrix[i, i]
}
for (i in 3:2) {
for (j in i:2-1) {
matrix[j, ] <- matrix[j, ] - matrix[i, ] * matrix[j, i]
}
}
matrix[,4]
Gelimination <- function(matrix, vector) {
matrix[1,] <- matrix[1,] / matrix[1, 1]
matrix <- cbind(matrix, vector)
for (i in 2:3) {
for (j in i:3) {
matrix[j, ] <- matrix[j, ] - matrix[i - 1, ] * matrix[j, i - 1]
}
matrix[i, ] <- matrix[i, ] / matrix[i, i]
}
for (i in 3:2) {
for (j in i:2-1) {
matrix[j, ] <- matrix[j, ] - matrix[i, ] * matrix[j, i]
}
}
return(matrix[, 4])
}
matrix <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
Gelimination(matrix, vector)
matrix <- matrix(c(0,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
Gelimination(matrix, vector)
Gelimination2 <- function(A, b) {
p <- nrow(A)
(U.pls <- cbind(A,b))
U.pls[1,] <- U.pls[1,]/U.pls[1,1]
i <- 2
while (i < p+1) {
j <- i
while (j < p+1) {
U.pls[j, ] <- U.pls[j, ] - U.pls[i-1, ] * U.pls[j, i-1]
j <- j+1
}
while (U.pls[i,i] == 0) {
U.pls <- rbind(U.pls[-i,],U.pls[i,])
}
U.pls[i,] <- U.pls[i,]/U.pls[i,i]
i <- i+1
}
for (i in p:2){
for (j in i:2-1) {
U.pls[j, ] <- U.pls[j, ] - U.pls[i, ] * U.pls[j, i]
}
}
}
Gelimination2(matrix, vector)
A <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
b <- c(1,2,6)
Gelimination(A, b)
A <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
b <- c(1,2,6)
third <- -1 * A[3,]
thrid
third
Gelimination <- function(matrix, vector) {
if (matrix[1,1] == 0) {
third <- -1 * matrix[3,]
matrix[3,] <- matrix[1,]
matrix[1,] <- third
}
matrix[1,] <- matrix[1,] / matrix[1, 1]
matrix <- cbind(matrix, vector)
for (i in 2:3) {
for (j in i:3) {
matrix[j, ] <- matrix[j, ] - matrix[i - 1, ] * matrix[j, i - 1]
}
matrix[i, ] <- matrix[i, ] / matrix[i, i]
}
for (i in 3:2) {
for (j in i:2-1) {
matrix[j, ] <- matrix[j, ] - matrix[i, ] * matrix[j, i]
}
}
return(matrix[, 4])
}
A <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
b <- c(1,2,6)
Gelimination(A, b)
A <- matrix(c(0,0,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
b <- c(1,2,6)
Gelimination(A, b)
matrix <- matrix(c(0,0,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
Gelimination(matrix, vector)
matrix <- matrix(c(0,0,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
third <- -1 * matrix[3,]
third
matrix <- matrix(c(0,0,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
Gelimination(matrix, vector)
matrix <- matrix(c(0,0,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
matrix <- cbind(matrix, vector)
third <- -1 * matrix[3,]
Gelimination <- function(matrix, vector) {
matrix <- cbind(matrix, vector)
if (matrix[1,1] == 0) {
third <- -1 * matrix[3,]
matrix[3,] <- matrix[1,]
matrix[1,] <- third
}
matrix[1,] <- matrix[1,] / matrix[1, 1]
for (i in 2:3) {
for (j in i:3) {
matrix[j, ] <- matrix[j, ] - matrix[i - 1, ] * matrix[j, i - 1]
}
matrix[i, ] <- matrix[i, ] / matrix[i, i]
}
for (i in 3:2) {
for (j in i:2-1) {
matrix[j, ] <- matrix[j, ] - matrix[i, ] * matrix[j, i]
}
}
return(matrix[, 4])
}
matrix <- matrix(c(0,0,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
Gelimination(matrix, vector)
29/15
Gelimination <- function(matrix, vector) {
matrix <- cbind(matrix, vector)
if (matrix[1,1] == 0) {
if (matrix[3,1] != 0) {
third <- -1 * matrix[3,]
matrix[3,] <- matrix[1,]
matrix[1,] <- third
} else {
return ("Can't have a zero pivot here...")
}
}
matrix[1,] <- matrix[1,] / matrix[1, 1]
for (i in 2:3) {
for (j in i:3) {
matrix[j, ] <- matrix[j, ] - matrix[i - 1, ] * matrix[j, i - 1]
}
matrix[i, ] <- matrix[i, ] / matrix[i, i]
}
for (i in 3:2) {
for (j in i:2-1) {
matrix[j, ] <- matrix[j, ] - matrix[i, ] * matrix[j, i]
}
}
return(matrix[, 4])
}
matrix <- matrix(c(0,0,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
Gelimination(matrix, vector)
matrix <- matrix(c(1,1,3,2,-1,5,-1,-2,4), nrow = 3, byrow = TRUE)
vector <- c(1,2,6)
Gelimination(matrix, vector)
